1，表单
form元素不仅构成了表单的所有元素,还会告诉浏览器当你提交表单元素时要把表单元素
发送到哪里，以及浏览器要以什么方法发送数据。
<form action=''http://wickedlysmart.com/htmlcss/content.php'' method="POST"></form>

action属性包含web服务器的url  http://wickedlysmart.com，脚本所在的文件夹htmlcss
将处理表单数据的服务器脚本文件名
method属性将确定表单数据如何发送到服务器，我们使用最新的方法POST，还有其他方法后面会介绍

2，如何在浏览器中创建有控件的表单元素，input元素，它是一个void元素，后面没有内容
<input type="" name=""> 大多数表单元素都需要一个name，服务器脚本将使用这个元素名

type属性值:
text-用于输入一行文本，文本还可以设置最大字符个数和宽度，例子：
        first name:<input type="text" name="firstname" value=""><br>
        second name:<input type="text" name="secondname" value=""><br>

submit-创建一个按钮，用于提交表单，点击这个按钮，浏览器会将表单发送给服务器脚本进行处理，例子
           <input type="submit"><br>

radio-创建包含多个按钮的控件，但是一次只能选择一个按钮，与一组给定选项的按钮需要有相同的name，不过每个选择可以有不同的值，如果为单选按钮输入元素增加一个属性checked，这个控件就会默认被选中，checked是一个布尔属性，不需要值，例子：
            <input type="radio" name="hotornot" value="hot">basketball
            <input type="radio" name="hotornot" value="hot" checkded>roll

checkbox-创建一个复选控件，可以选中也可以不选中，相同的复选框也共用一个name，每个复选框有不同的值，例子：
            <input type="checkbox" name="spice" value="salt">first
            <input type="checkbox" name="spice" value="Pepper">second
            <input type="checkbox" name="spice" value="Garlic">third

passward-创建一个密码输入控件，与text类似，只不过输入内容不可见

file-创建一个文件输入控件，允许你选择一个文件，表单提交时会把文件发送给服务器，使用过这个元素的前提是必须使用POST方法

placeholder属性
<input type="text" placeholder="Buckaroo Banzai">
表单中大部分不同类型的input元素都可以使用placeholder属性，不仅仅是text，这个属性会为提供一个提示，提示你在控件中输入什么内容，该提示的内容会比控件的输入内容要浅一些，一旦单击文本域，占位的提示文本将会消失，占位内容不会作为控件内容而被提交

required属性，该属性是一个布尔属性，没有值
<input type="text" placeholder="Buckaroo Banzai" required>
一旦控件设置了这个控件，就必须在控件中输入内容，否则就无法提交表单，
3，textarea元素

text元素不是一个空元素，所以有开始标记和结束标记，会创建一个多行的文本区，可以在其中输入多行文本，如果输入的文本在文本区中放不下，右边还会出现一个滚动条，注意，对于textarea，html中无法限制用于键入多少文本，跟type=“text”不一样
<textarea name="comments" rows="10" cols="48"><textarea/>

使用name属性为元素指定一个唯一的名字，rows告诉浏览器文本区高度为多少个字符，cols告诉浏览器文本区宽度为多少个字符
开始标记和结束标记之间的文本会成为浏览器文本区控件的初始文本。

4，select元素

select元素会在web页面中创建一个菜单控件，菜单提供了一种从一组选项中做出选择的方法，select元素与option元素结合使用可以创建一个菜单，用option元素来表示各个菜单项，option元素的内容用作为才菜单的描述，每个菜单选项还可以包含一个表示这个菜单项的值

            <select name="characters">
                <option value="Buckaroo">Buckaroo Banzai</option>
                <option value="Tommy">Perfect Tommy</option>
                <option value="Penny">Penny Priddy</option>
                <option value="Jersey">New Jersey</option>
                <option value="John"John parker></option>
            </select>
假设选择了额Bukaroo，浏览器会把数据character=Bukaroo发送给服务器
select有一个multiple属性，能够把单选菜单变成多选菜单

5，html5中新增的input属性值
number-只能输入数字，而不是文本，max和min属性来限制允许输入的数字：
<input type="number" min="0" max="20">

range-类似于number，它会显示一个滚动条，number和range都有一个可选的step属性，用于指定值的间隔数（步长）:
<input type="range" min="0" max="20" step="5">

color-可以指定一个颜色，单击这个控件时会弹出一个颜色选择器，允许你选择一个颜色，而不必输入颜色名或值
<input type="color">

date-可以利用一个日期选择控件，这个控件会创建一个合法的日期格式串，发送到服务器脚本
<input type="date">

email-这是一个文本输入元素，在一些移动浏览器中，开始输入email时你会得到一个方便输入email的定制键盘
<input type="email">

tel-这也是一个文本输入元素，与email类似，它会在移动设备上弹出一个输入tel的定制键盘
<input type="tel">

url-与email和tel类似，是一个文本输入元素，会弹出一个输入url的定制键盘

emai、tel、url都是text的变种，在桌面浏览器上你看不到任何区别，不过在移动浏览器中会得到一个定制键盘，可以更方便的输入你需要的字符

以上新增的输入类型都是html5中的，有些浏览器并不支持

6，浏览器向服务器发送数据主要有两种方法，POST和GET

POST和GET的任务是一样的，都是讲表单数据从浏览器发到服务器，不过采用了不同的方式
POST会打包你的表单变量，把数据从后台发送到服务器；
GET也会打包表单变量，但会把这些数据追加到URL的最后，然后向服务器发送一个请求




